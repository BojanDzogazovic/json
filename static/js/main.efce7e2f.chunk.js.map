{"version":3,"sources":["Context.js","assets/json-icon.svg","components/Header.js","assets/arrow-icon.svg","components/SinglePost.js","components/Posts.js","components/Post.js","components/NotFound.js","App.js","index.js"],"names":["Context","createContext","Header","React","memo","globalState","useContext","console","log","welcomeMsg","className","src","jsonIcon","alt","SinglePost","post","link","setGlobalState","comments","filter","comment","postId","id","name","title","body","map","email","target","to","onClick","prevState","postID","arrowIcon","Posts","useState","setFilter","filteredData","setFilteredData","htmlFor","type","placeholder","onChange","e","value","length","result","posts","toLowerCase","includes","loading","Post","useEffect","window","location","href","split","pop","NotFound","App","a","Promise","all","fetch","res","r","json","data","forEach","user","userId","Error","fetchData","providerValue","useMemo","Provider","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.efce7e2f.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const Context = createContext(null);\r\n","export default __webpack_public_path__ + \"static/media/json-icon.4b40bc67.svg\";","import React, { useContext } from \"react\";\r\nimport { Context } from \"../Context\";\r\nimport jsonIcon from \"../assets/json-icon.svg\";\r\n\r\nexport const Header = React.memo(() => {\r\n  const { globalState } = useContext(Context);\r\n  const componentName = \"Header\";\r\n\r\n  console.log(`${globalState.welcomeMsg} ${componentName}`);\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <img className=\"header__icon\" src={jsonIcon} alt=\"json-icon\" />\r\n      <h1 className=\"header__title\">JSON app</h1>\r\n    </header>\r\n  );\r\n});\r\n","export default __webpack_public_path__ + \"static/media/arrow-icon.bfa8cdc8.svg\";","import React, { useContext } from \"react\";\r\nimport { Context } from \"../Context\";\r\nimport arrowIcon from \"../assets/arrow-icon.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const SinglePost = ({ post, link }) => {\r\n  const { globalState, setGlobalState } = useContext(Context);\r\n  const componentName = \"Single Post\";\r\n\r\n  console.log(`${globalState.welcomeMsg} ${componentName}`);\r\n\r\n  let comments = globalState.comments.filter(\r\n    (comment) => comment.postId === post.id\r\n  );\r\n\r\n  return (\r\n    <div className=\"single-post\">\r\n      <p className=\"single-post__user\">User: {post.name}</p>\r\n      <h3 className=\"single-post__title\">{post.title}</h3>\r\n      <p className=\"single-post__body\">{post.body}</p>\r\n      <div className=\"single-post__comments\">\r\n        <h4 className=\"single-post__comments-title\">Comments:</h4>\r\n        {comments.map((comment) => (\r\n          <div key={comment.id} className=\"single-post__comment\">\r\n            <p className=\"single-post__comment-title\">{comment.name}</p>\r\n            <p className=\"single-post__comment-email\">- {comment.email}</p>\r\n            <p className=\"single-post__comment-body\">{comment.body}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"single-post__cta-box\">\r\n        {link ? (\r\n          <Link\r\n            target=\"_blank\"\r\n            key={post.id}\r\n            to={`/post/${post.id}`}\r\n            onClick={() => {\r\n              setGlobalState((prevState) => ({\r\n                ...prevState,\r\n                postID: post.id,\r\n              }));\r\n            }}\r\n          >\r\n            <button className=\"cta\">\r\n              Go to post\r\n              <img className=\"cta__icon\" src={arrowIcon} alt=\"arrow\" />\r\n            </button>\r\n          </Link>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSinglePost.propTypes = {\r\n  post: PropTypes.object,\r\n  link: PropTypes.bool,\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Context } from \"../Context\";\r\nimport { Header } from \"./Header\";\r\nimport { SinglePost } from \"./SinglePost\";\r\n\r\nexport const Posts = () => {\r\n  const { globalState } = useContext(Context);\r\n  const componentName = \"Posts\";\r\n\r\n  console.log(`${globalState.welcomeMsg} ${componentName}`);\r\n\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [filteredData, setFilteredData] = useState([]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <section className=\"container\">\r\n        <div className=\"search-box\">\r\n          <label htmlFor=\"search\" className=\"search-box__label\">\r\n            Search:\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search posts by user name...\"\r\n            className=\"search-box__input\"\r\n            onChange={(e) => {\r\n              if (e.target.value.length === 0) {\r\n                setFilter(\"\");\r\n              } else {\r\n                setFilter(e.target.value);\r\n                let result = globalState.posts.filter((post) =>\r\n                  post.name.toLowerCase().includes(e.target.value.toLowerCase())\r\n                );\r\n\r\n                setFilteredData(result);\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n        <h2>Posts:</h2>\r\n        {globalState.loading ? (\r\n          <div className=\"loading\">Loading...</div>\r\n        ) : filter ? (\r\n          filteredData.length ? (\r\n            <div>\r\n              <div className=\"search-results\">\r\n                Search results: {filteredData.length}\r\n              </div>\r\n              {filteredData.map((post) => (\r\n                <SinglePost key={post.id} post={post} link={true} />\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div className=\"no-results\">No results...</div>\r\n          )\r\n        ) : (\r\n          globalState.posts.map((post) => (\r\n            <SinglePost key={post.id} post={post} link={true} />\r\n          ))\r\n        )}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Context } from \"../Context\";\r\nimport { SinglePost } from \"./SinglePost\";\r\n\r\nexport const Post = () => {\r\n  const { globalState, setGlobalState } = useContext(Context);\r\n  const componentName = \"Post\";\r\n\r\n  console.log(`${globalState.welcomeMsg} ${componentName}`);\r\n\r\n  useEffect(() => {\r\n    setGlobalState((prevState) => ({\r\n      ...prevState,\r\n      postID: window.location.href.split(\"/\").pop() - 1,\r\n    }));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {globalState.loading ? (\r\n        <div className=\"loading\">Loading...</div>\r\n      ) : (\r\n        <SinglePost\r\n          key={globalState.postID}\r\n          post={globalState.posts[globalState.postID]}\r\n          link={false}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Context } from \"../Context\";\r\n\r\nexport const NotFound = () => {\r\n  const { globalState } = useContext(Context);\r\n  const componentName = \"Notfound\";\r\n\r\n  console.log(`${globalState.welcomeMsg} ${componentName}`);\r\n\r\n  return (\r\n    <div className=\"no-page\">\r\n      <p className=\"no-page__message\">\r\n        404 <br /> Page not found\r\n      </p>\r\n      <Link className=\"no-page__link\" to={\"/posts\"}>\r\n        Back to Posts\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n","import \"./App.scss\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport { Posts } from \"./components/Posts\";\nimport { Post } from \"./components/Post\";\nimport { NotFound } from \"./components/NotFound\";\nimport { Context } from \"./Context\";\nimport { useState, useEffect, useMemo } from \"react\";\n\nfunction App() {\n  const [globalState, setGlobalState] = useState({\n    loading: true,\n    welcomeMsg: \"Hello from\",\n    postID: 0,\n    posts: [],\n    comments: [],\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await Promise.all([\n          fetch(\"https://jsonplaceholder.typicode.com/posts/\"),\n          fetch(\"https://jsonplaceholder.typicode.com/comments/\"),\n          fetch(\"https://jsonplaceholder.typicode.com/users/\"),\n        ]);\n        const data = await Promise.all(res.map((r) => r.json()));\n\n        data[0].forEach((post) => {\n          data[2].forEach((user) => {\n            if (post.userId === user.id) {\n              post.name = user.name;\n            }\n          });\n        });\n\n        setGlobalState((prevState) => ({\n          ...prevState,\n          posts: data[0],\n          comments: data[1],\n          loading: false,\n        }));\n      } catch {\n        throw Error(\"Fetching data failed\");\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const providerValue = useMemo(() => ({ globalState, setGlobalState }), [\n    globalState,\n    setGlobalState,\n  ]);\n\n  console.log(window);\n\n  return (\n    <HashRouter>\n      <Context.Provider value={providerValue}>\n        <Switch>\n          <Route path=\"/posts\" exact component={Posts} />\n          <Route path=\"/post/:id\" exact component={Post} />\n          <Route component={NotFound} />\n        </Switch>\n      </Context.Provider>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}